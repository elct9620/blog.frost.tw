<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on 弦而時習之</title><link>https://blog.frost.tw/tags/API/</link><description>Recent content in API on 弦而時習之</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><managingEditor>contact@frost.tw (蒼時弦也)</managingEditor><webMaster>contact@frost.tw (蒼時弦也)</webMaster><lastBuildDate>Sun, 29 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.frost.tw/tags/API/index.xml" rel="self" type="application/rss+xml"/><item><title>如何透過 Service Account 來取得 Google API 的 OAuth2 Token</title><link>https://blog.frost.tw/posts/2019/12/29/How-to-use-Service-Account-to-exchange-Google-OAuth2-API-token/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><author>contact@frost.tw (蒼時弦也)</author><guid>https://blog.frost.tw/posts/2019/12/29/How-to-use-Service-Account-to-exchange-Google-OAuth2-API-token/</guid><description>&lt;p>前陣子在嘗試一些比較少見的 Google API 時發現，在 Google 提供的 Ruby Gem 裡面並不支援這個 API 的實作，這表示需要自己去想辦法解決如何去呼叫這個 API 的問題。&lt;/p>
&lt;p>不過呼叫 API 需要 Access Token 才能夠使用，以往我們都是依靠第三方套件或者 Google 官方提供的 Gem 直接呼叫，似乎很少去直接實作客戶端。另一方面我們對 OAuth2 的認識大多是做 SSO（Single Sign On）而非這種伺服器對伺服器的呼叫。&lt;/p>
&lt;p>以 Google 這種規模的公司，如果是直接使用一般 OAuth2 的伺服器對伺服器的作法似乎也不太適合，而 Google 提供的解決方案就是 Service Account 了！&lt;/p></description></item><item><title>Stripe 的 Idempotency Key 設計機制</title><link>https://blog.frost.tw/posts/2017/10/30/The-design-of-Stripe-s-Idempotency-Keys/</link><pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate><author>contact@frost.tw (蒼時弦也)</author><guid>https://blog.frost.tw/posts/2017/10/30/The-design-of-Stripe-s-Idempotency-Keys/</guid><description>&lt;p>週末看到一篇 Stripe 工程師所寫的文章，是一篇關於 Idempotency Key （幂等鍵）的設計機制。因為是一篇非常棒的文章，而且裡面的概念除了可以應用在 API 設計之外，很多程式設計上需要解決的問題都可以透過這個概念來處理。&lt;/p>
&lt;p>原文非常的長而且很詳細，這篇文章只會做簡單的重點整理。&lt;/p>
&lt;p>有興趣的話可以打開&lt;a href="https://brandur.org/idempotency-keys">原文&lt;/a>來讀，是一篇很有用的文章。&lt;/p>
&lt;blockquote>
&lt;p>作者是很厲害的工程師，部落格上的文章都是非常精實的技術文。&lt;/p>
&lt;/blockquote></description></item></channel></rss>