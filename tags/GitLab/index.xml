<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitLab on 弦而時習之</title><link>https://blog.frost.tw/tags/GitLab/</link><description>Recent content in GitLab on 弦而時習之</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Sun, 12 Jun 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.frost.tw/tags/GitLab/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 GitLab CI 整合 SonarQube</title><link>https://blog.frost.tw/posts/2016/06/12/Working-with-Gitlab-CI-and-Sonarqube/</link><pubDate>Sun, 12 Jun 2016 00:00:00 +0000</pubDate><guid>https://blog.frost.tw/posts/2016/06/12/Working-with-Gitlab-CI-and-Sonarqube/</guid><description>&lt;p>之前都在偷懶沒有寫網誌，剛好這次端午連假比較長。
所以想做測試跟實驗的部分都做完了，就來寫一篇關於 GitLab CI 整合的經驗分享。&lt;/p>
&lt;p>文章中大致上會涵蓋這些部分：&lt;/p>
&lt;ul>
&lt;li>GitLab CI 基本使用&lt;/li>
&lt;li>Rancher建置環境&lt;/li>
&lt;li>SonarQube 基本使用&lt;/li>
&lt;li>GitLab CI 整合環境&lt;/li>
&lt;/ul>
&lt;p>文章會以我在建構 CI 環境的過程中來講解，一些安裝跟配置的部分會直接跳過。&lt;/p></description></item><item><title>用 Vagrant 整合 GitLab 與 Capistrano 做 Staging 環境自動部署</title><link>https://blog.frost.tw/posts/2013/11/03/vagrant-integrated-gitlab-with-capistrano-create-staging-environment-automatically-deployed/</link><pubDate>Sun, 03 Nov 2013 00:00:00 +0000</pubDate><guid>https://blog.frost.tw/posts/2013/11/03/vagrant-integrated-gitlab-with-capistrano-create-staging-environment-automatically-deployed/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->這標題超級長的說（崩潰&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>最近因為有實習生要來，所以把老爸公司設定好 GitLab 和 Gitlba-CI 來作為內部的版本本控制和自動化測試環境。
不過原本規劃的 Staging 環境也是在這檯主機上（當初就很淡定把記憶體和處理器加高，因為我會狂開 VM XD）但是會有 SSH 權限上的問題，原本想利用 Git 的 Hook 之類的來處理，但是感覺似乎不太好。&lt;/p>
&lt;p>剛好這次看到 GitLab / GitLab-CI 的介紹文，我又再次嘗試安裝，過程上順利、簡單很多。
不過上次不順利肯定是我把整個環境裝在 NAS 裡面的關係 XDD&lt;/p>
&lt;p>從我建好 GitLab / GitLab-CI 到設定 Capistrano 到自動部署，其實花費不少時間，而且有很多「差點忘記」的部分，因此決定來寫一篇文章做筆記！&lt;/p></description></item></channel></rss>