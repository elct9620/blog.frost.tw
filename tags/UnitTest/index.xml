<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UnitTest on 弦而時習之</title><link>https://blog.frost.tw/tags/UnitTest/</link><description>Recent content in UnitTest on 弦而時習之</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Fri, 12 Jun 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.frost.tw/tags/UnitTest/index.xml" rel="self" type="application/rss+xml"/><item><title>Unreal Engine 4 的自動化測試</title><link>https://blog.frost.tw/posts/2015/06/12/unreal-engine-4-automation-testing/</link><pubDate>Fri, 12 Jun 2015 00:00:00 +0000</pubDate><guid>https://blog.frost.tw/posts/2015/06/12/unreal-engine-4-automation-testing/</guid><description>&lt;p>最近幾年做測試似乎變成一個非常熱門的議題，而且也逐漸的被大多開發者了解到做測試的優點。不過，一般的軟體可以做測試倒是沒有什麼問題，那麼遊戲該怎麼做測試呢？&lt;/p>
&lt;p>我自己認為這是一個很難探討的問題，大部份的遊戲就基於不確定性而變得有趣。在充滿不確定的情境下，要做測試就變得非常困難了。&lt;/p>
&lt;p>不過，還是有像是基本的公式計算、數值檢查等等可以做基本的檢查，雖然無法完全的對遊玩上做完整的測試。但是至少可以確保功能上與數值上是以正確的數值做計算。&lt;/p>
&lt;p>那麼，就來談談 Unreal Engien 4 的自動化測試工具 &lt;code>Automation Tools&lt;/code> 吧！&lt;/p></description></item></channel></rss>