<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UnrealEngine on 弦而時習之</title><link>https://blog.frost.tw/tags/UnrealEngine/</link><description>Recent content in UnrealEngine on 弦而時習之</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Fri, 12 Jun 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.frost.tw/tags/UnrealEngine/index.xml" rel="self" type="application/rss+xml"/><item><title>Unreal Engine 4 的自動化測試</title><link>https://blog.frost.tw/posts/2015/06/12/unreal-engine-4-automation-testing/</link><pubDate>Fri, 12 Jun 2015 00:00:00 +0000</pubDate><guid>https://blog.frost.tw/posts/2015/06/12/unreal-engine-4-automation-testing/</guid><description>&lt;p>最近幾年做測試似乎變成一個非常熱門的議題，而且也逐漸的被大多開發者了解到做測試的優點。不過，一般的軟體可以做測試倒是沒有什麼問題，那麼遊戲該怎麼做測試呢？&lt;/p>
&lt;p>我自己認為這是一個很難探討的問題，大部份的遊戲就基於不確定性而變得有趣。在充滿不確定的情境下，要做測試就變得非常困難了。&lt;/p>
&lt;p>不過，還是有像是基本的公式計算、數值檢查等等可以做基本的檢查，雖然無法完全的對遊玩上做完整的測試。但是至少可以確保功能上與數值上是以正確的數值做計算。&lt;/p>
&lt;p>那麼，就來談談 Unreal Engien 4 的自動化測試工具 &lt;code>Automation Tools&lt;/code> 吧！&lt;/p></description></item><item><title>Unreal Engine 4 - 用 C++ 自訂 Pawn 物件</title><link>https://blog.frost.tw/posts/2014/10/05/unreal-engine-4-using-cpp-customize-pawn-object/</link><pubDate>Sun, 05 Oct 2014 00:00:00 +0000</pubDate><guid>https://blog.frost.tw/posts/2014/10/05/unreal-engine-4-using-cpp-customize-pawn-object/</guid><description>&lt;p>雖然 MRuby in C# 系列暫時沒辦法繼續撰寫，但是 Unreal Engine 4 系列大概會在畢業製作完成之前，陸陸續續地以筆記的形式更新出來。&lt;/p>
&lt;p>實際上，用 Unreal Engine 4 開發遊戲是不太需要用 C++ 來處理的，內建的 Blueprints 功能就具備非常優質的設計，也算是整個引擎中不論美術、程式都會經常接觸的功能。其特色就是人人都能懂，美術可以用來控制動畫、程式可以用來設計 AI 跟遊戲，上手的難度也非常低。&lt;/p>
&lt;p>那麼，會遭遇使用 C++ 來處理的情況是什麼呢？&lt;/p>
&lt;p>基本上可以分成兩種，第一種就是效能問題，目前還沒有碰過，不過以 C++ 撰寫的程式碼肯定會比較順暢（雖然我很懷疑 Blueprints 所編譯的成品就能產生接近 C++ 等級的效能）&lt;/p>
&lt;p>第二種則是 Unreal Engine 初期沒有考慮到，或者還未支援的的部分。像是在 4.5 的 UMG (Unreal Motion Graphics) 功能推出之前，需要用到 Slate UI 來輔助建構遊戲界面，就勢必得用 C++ 才能解決。&lt;/p>
&lt;p>總而言之，這篇文章在討論的就是第二種情況，我們需要的功能還未在 Unreal Engine 4 上面「好好的」運作。&lt;/p>
&lt;p>註：程式結構太複雜這點，原本想算進去。不過因為 Blueprints 不論註解還是開 Functions 都能做到，很難用這點來說是一種缺點⋯⋯&lt;/p></description></item></channel></rss>